---

- name: install kafka
  hosts: kafka_all
  sudo: True
  environment:
    JAVA_HOME: /usr/java/latest
  vars:
    package_home: "/packages"
    package_name: "kafka_2.11-0.10.1.1"
    package_suffix: "tgz"
    package_version: "0.10.1.1"
    remote_home: "/tmp"
    install_home: "/opt"
    unzip_name: "{{ package_name }}"
    link_name: "kafka"
    data_root: "/data/kafka-logs"
    log_root: "/var/log/kafka"

    LOG_DIR: "{{ log_root }}"

    delete_topic_enable: "false"

    listeners: "PLAINTEXT://{{ hostvars[inventory_hostname].ansible_default_ipv4.address }}:9092"
    num_network_threads: "3"
    num_io_threads: "8"
    socket_send_buffer_bytes: "102400"
    socket_receive_buffer_bytes: "102400"
    socket_request_max_bytes: "104857600"

    log_dirs: "{{ data_root }}"
    num_partitions: "1"
    num_recovery_threads_per_data_dir: "1"

    log_retention_hours: "168"    
    log_segment_bytes: "1073741824"
    log_retention_check_interval_ms: "300000"

    zookeeper_connect: "{{ groups.zookeeper_all | join(':2181,') }}:2181"
    zookeeper_connection_timeout_ms: "6000"

    hadoop_tar_url: "http://apache.fayea.com/kafka/{{ package_version }}/{{ package_name }}.{{ package_suffix }}"
    
  tasks:
    - name: remove data
      file: path="{{item}}" state=absent
      with_items:
        - "{{ install_home }}/{{ link_name }}"
        - "{{ install_home }}/{{ unzip_name }}"
        - "{{ data_root }}"
        - "{{ log_root }}"
      tags:
        - uninstall
    - name: copy {{ package_home }}/{{ package_name }}.{{ package_suffix }} to remote server
      copy: src={{ package_home }}/{{ package_name }}.{{ package_suffix }} dest={{ remote_home }} remote_src=False
      tags:
        - install
    - name: unzip {{ remote_home }}/{{ package_name }}.{{ package_suffix }}
      unarchive: src={{ remote_home }}/{{ package_name }}.{{ package_suffix }}  dest={{ install_home }}/ copy=no
      tags:
        - install
    - name: update config files to remote server
      template: src="{{ item.src }}" dest="{{ item.dest }}" force=yes
      with_items:
        - { src: "server.properties.j2", dest: "{{ install_home }}/{{ unzip_name }}/config/server.properties" }
        - { src: "kafka-run-class.sh.j2", dest: "{{ install_home }}/{{ unzip_name }}/bin/kafka-run-class.sh" }
      tags:
        - install
    - name: create soft link {{ link_name }} to {{ unzip_name }}
      file: src={{ install_home }}/{{ unzip_name }} dest={{ install_home }}/{{ link_name }} state=link
      tags:
        - install
    - name: update profile
      lineinfile: dest=/etc/profile regexp={{ item.regexp }} line={{ item.line }} state=present
      with_items:
        - { regexp: "^KAFKA_HOME=", line: "KAFKA_HOME={{ install_home }}/{{ link_name }}" }
        - { regexp: "^export PATH=\\${PATH}:\\${KAFKA_HOME}/bin", line: "export PATH=${PATH}:${KAFKA_HOME}/bin" }
      tags:
        - install
    - name: recovery profile
      lineinfile: dest=/etc/profile regexp={{ item.regexp }} state=absent
      with_items:
        - { regexp: "^KAFKA_HOME=", line: "KAFKA_HOME={{ install_home }}/{{ link_name }}" }
        - { regexp: "^export PATH=\\${PATH}:\\${KAFKA_HOME}/bin", line: "export PATH=${PATH}:${KAFKA_HOME}/bin" }
      tags:
        - uninstall
    - name: start kafka
      shell: chdir="{{ install_home }}/{{ link_name }}" nohup bin/kafka-server-start.sh config/server.properties &
      tags:
        - start
    - name: stop kafka
      shell: chdir="{{ install_home }}/{{ link_name }}" bin/kafka-server-stop.sh
      tags:
        - stop
